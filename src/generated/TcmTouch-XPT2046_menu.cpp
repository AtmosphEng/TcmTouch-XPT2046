/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

// Generated for Arduino ESP32 by TcMenu 4.4.0 on 2024-12-25T14:11:00.139646800Z.

#include <tcMenu.h>
#include "TcmTouch-XPT2046_menu.h"
#include "../ThemeDarkModeTraditional.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "TcmTouch-XPT2046 241225 2154", "446f8ad7-3d00-45aa-94db-b0e2c357f9c9" };
TcMenuRemoteServer remoteServer(applicationInfo);

TFT_eSPI gfx;
TfteSpiDrawable gfxDrawable(&gfx, 0);
GraphicsDeviceRenderer renderer(30, applicationInfo.name, &gfxDrawable);
XPT2046_Touchscreen touchDevice(33, 36);
iotouch::AdaLibTouchInterrogator touchInterrogator(touchDevice);
iotouch::TouchOrientationSettings touchOrientation(false, false, false);
MenuTouchScreenManager touchScreen(&touchInterrogator, &renderer, touchOrientation);
WiFiServer server(3333);
EthernetInitialisation ethernetInitialisation(&server);
EthernetTagValTransport ethernetTransport;
TagValueRemoteServerConnection ethernetConnection(ethernetTransport, ethernetInitialisation);

// Global Menu Item declarations
const PROGMEM BooleanMenuInfo minfoTcmRestart = { "Restart", 2, 0xffff, 1, onChangeTcmRestart, NAMING_TRUE_FALSE };
BooleanMenuItem menuTcmRestart(&minfoTcmRestart, false, nullptr, INFO_LOCATION_PGM);
const PROGMEM AnalogMenuInfo minfoBaseCCW = { "BaseCCW", 4, 0xffff, 255, onChangeTcmBaseCCW, 0, 1, "" };
AnalogMenuItem menuBaseCCW(&minfoBaseCCW, 0, &menuTcmRestart, INFO_LOCATION_PGM);
const PROGMEM AnalogMenuInfo minfoTcmBaseTCW = { "BaseTCW", 3, 0xffff, 255, onChangeTcmBaseTCW, 0, 1, "" };
AnalogMenuItem menuTcmBaseTCW(&minfoTcmBaseTCW, 0, &menuBaseCCW, INFO_LOCATION_PGM);
const PROGMEM BooleanMenuInfo minfoTcmDebugLED = { "DebugLED", 1, 0xffff, 1, onChangeTcmDebugLED, NAMING_TRUE_FALSE };
BooleanMenuItem menuTcmDebugLED(&minfoTcmDebugLED, false, &menuTcmBaseTCW, INFO_LOCATION_PGM);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).
    setSizeBasedEEPROMStorageEnabled(true);
    // Code generated by plugins and new operators.
    gfx.begin();
    gfx.setRotation(0);
    renderer.setUpdatesPerSecond(5);
    touchInterrogator.init();
    touchScreen.start();
    menuMgr.initWithoutInput(&renderer, &menuTcmDebugLED);
    touchDevice.setRotation(0);
    remoteServer.addConnection(&ethernetConnection);
    renderer.setTitleMode(BaseGraphicalRenderer::TITLE_FIRST_ROW);
    renderer.setUseSliderForAnalog(true);
    installDarkModeTraditionalTheme(renderer, MenuFontDef(nullptr, 2), MenuFontDef(nullptr, 2), true);
}

